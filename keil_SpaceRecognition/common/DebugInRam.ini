//*** <<<  Use Configuration !disalbe! Wizard in Context Menu >>>  ***

FUNC void SetupForStart (void) {
 
// <o> Program Entry Point
  PC= 0x30000000;
}
 
FUNC void Init (void) {
 
 _WDWORD(0x4A000008, 0xFFFFFFFF);     // Disable All Interrupts
 _WDWORD(0x53000000, 0x00000000);     // Disable Watchdog Timer
                                        //Clock Setup
                                        // FCLK= 300 MHz, HCLK = 100 MHz, PCLK = 50 MHz @12M cystall external
 _WDWORD(0x4C000000, 0x0FFF0FFF);     // LOCKTIME
 _WDWORD(0x4C000014, 0x0000000F);     // CLKDIVN
 _WDWORD(0x4C000004, 0x00043011);     // MPLLCON s=1,p=1,m=67
 _WDWORD(0x4C000008, 0x00038021);     // UPLLCON s=1,p=2,m=56, CLK_UPLL=96MHz,so CLKDIVN[3]=1
 _WDWORD(0x4C00000C, 0x001FFFF0);     // CLKCON enable all peripheral clock
 
                                        // MemoryController Setup for SDRAM
 _WDWORD(0x48000000, 0x22000000);     // BWSCON not using UB/LB,WAIT, 32bit data width
 _WDWORD(0x4800001C, 0x00018005);     // BANKCON6            bank6 setSDRAM type
 _WDWORD(0x48000020, 0x00018005);     // BANKCON7            bank7 setSDRAM type
 _WDWORD(0x48000024, 0x008404F3);     // REFRESH
 _WDWORD(0x48000028, 0x00000032);     // BANKSIZE               bank 6/7set to 128M/128M
  //_WDWORD(0x48000028, 0x00000030); bank6/7 set to 32M/32M
 _WDWORD(0x4800002C, 0x00000020);     // MRSRB6
 _WDWORD(0x48000030, 0x00000020);     // MRSRB7
 
 _WDWORD(0x56000000, 0x000003FF);     // GPACON: Enable Address lines for SDRAM
}
 
 
// Reset chip with watchdog, because nRSTline is routed on hardware in a way
// that it can not be pulled low with ULINK
 
_WDWORD(0x40000000, 0xEAFFFFFE);        // Load RAM addr 0 with branch toitself,0xEAFFFFFE means B        loop. usethis to ressult a watchdog timeout
CPSR = 0x000000D3;                      // Disable interrupts(irqand fiq),set to svc mode
PC  = 0x40000000;                     // Position PC to start of RAM
_WDWORD(0x53000000, 0x00000021);        // Enable Watchdog
g, 0                                    // Wait forWatchdog to reset chip
 
Init();                                 // Initialize memory
LOAD obj/uart_test.axf INCREMENTAL                   //Download program
SetupForStart();                        // Setup for Running
//g, xmain                                // Goto Main
//g, RESET


